// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "turbine_data",
    columns: [
      { name: "name", type: "string" },
      { name: "axis_height", type: "float" },
      { name: "velocities", type: "string" },
      { name: "powers", type: "string" },
      { name: "specific_mass_air", type: "float" },
      { name: "max_output", type: "float" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type TurbineData = InferredTypes["turbine_data"];
export type TurbineDataRecord = TurbineData & XataRecord;

export type DatabaseSchema = {
  turbine_data: TurbineDataRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Luiz-Alberto-Alimena-s-workspace-vovbqj.us-east-1.xata.sh/db/wind-tool-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
